# Generated by Django 5.1.1 on 2025-04-09 11:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('key', models.CharField(max_length=50)),
                ('preheading', models.TextField(blank=True, max_length=500, null=True)),
                ('content', models.TextField(max_length=500)),
                ('subheading', models.TextField(blank=True, max_length=500, null=True)),
                ('type', models.CharField(choices=[('input', 'INPUT'), ('textarea', 'TEXTAREA'), ('numeric', 'NUMERIC'), ('checkbox', 'CHECKBOX'), ('radio', 'RADIO'), ('boolean', 'BOOLEAN'), ('scale', 'SCALE')], max_length=50)),
                ('order', models.PositiveSmallIntegerField()),
                ('is_required', models.BooleanField(default=True)),
                ('is_attention_check', models.BooleanField(default=False)),
                ('has_follow_up', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'survey_questions',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Scale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('key', models.CharField(max_length=50, unique=True)),
                ('options', models.JSONField()),
            ],
            options={
                'db_table': 'survey_scales',
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('initiated', 'INITIATED'), ('in_progress', 'IN_PROGRESS'), ('completed', 'COMPLETED'), ('exited', 'EXITED'), ('terminated', 'TERMINATED')], default='initiated', max_length=50)),
                ('guid', models.CharField(blank=True, max_length=255, null=True)),
                ('token', models.CharField(editable=False, max_length=64, unique=True)),
                ('fingerprint', models.CharField(blank=True, max_length=255, null=True)),
                ('violation_count', models.PositiveSmallIntegerField(default=0)),
                ('avatar_id', models.CharField(blank=True, max_length=50, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('privacy_consent_given_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'survey_submissions',
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('key', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=500)),
                ('email_template_uuid', models.UUIDField()),
                ('type', models.CharField(choices=[('classic', 'CLASSIC'), ('avatar', 'AVATAR')], max_length=50)),
                ('questionnaire_type', models.CharField(choices=[('bfi2s', 'BFI2S'), ('cfq', 'CFQ')], max_length=50)),
            ],
            options={
                'db_table': 'surveys',
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent_id', models.CharField(choices=[('summary', 'SUMMARY'), ('security', 'SECURITY'), ('follow_up', 'FOLLOW_UP'), ('discussion', 'DISCUSSION'), ('wrapper', 'WRAPPER')], max_length=50)),
                ('type', models.CharField(choices=[('follow_up', 'FOLLOW_UP'), ('discussion', 'DISCUSSION')], max_length=50)),
                ('required_messages_count', models.IntegerField(blank=True, null=True)),
                ('is_required', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('final_note', models.TextField(blank=True, max_length=1000, null=True)),
                ('final_note_submitted_at', models.DateTimeField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chats', to='survey.submission')),
            ],
            options={
                'db_table': 'survey_chats',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.CharField(choices=[('system', 'SYSTEM'), ('user', 'USER'), ('assistant', 'ASSISTANT')], max_length=50)),
                ('content', models.TextField(max_length=1000)),
                ('is_flagged', models.BooleanField(default=False)),
                ('chat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='survey.chat')),
            ],
            options={
                'db_table': 'survey_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='ChatSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('asked_at', models.DateTimeField()),
                ('started_answering_at', models.DateTimeField(blank=True, null=True)),
                ('ended_answering_at', models.DateTimeField(blank=True, null=True)),
                ('message', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='session', to='survey.message')),
            ],
            options={
                'db_table': 'survey_chat_sessions',
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.CharField(max_length=50)),
                ('order', models.PositiveSmallIntegerField()),
                ('requires_input', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='survey.question')),
            ],
            options={
                'db_table': 'survey_options',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='scale',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='questions', to='survey.scale'),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('key', models.CharField(max_length=50)),
                ('title', models.CharField(max_length=50)),
                ('subtitle', models.TextField(blank=True, max_length=500, null=True)),
                ('content', models.TextField(blank=True, max_length=500, null=True)),
                ('type', models.CharField(choices=[('information', 'INFORMATION'), ('questionnaire', 'QUESTIONNAIRE'), ('results', 'RESULTS')], max_length=50)),
                ('order', models.PositiveSmallIntegerField()),
                ('is_required', models.BooleanField(default=False)),
                ('is_ai_assisted', models.BooleanField(default=False)),
                ('has_discussion', models.BooleanField(default=False)),
                ('questionnaire_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='results_section', to='survey.section')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='survey.survey')),
            ],
            options={
                'db_table': 'survey_sections',
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='survey.section'),
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('data', models.JSONField(blank=True, null=True)),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='results', to='survey.section')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='survey.submission')),
            ],
            options={
                'db_table': 'survey_results',
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('_content', models.TextField(blank=True, db_column='content', max_length=500, null=True)),
                ('explanation', models.TextField(blank=True, max_length=500, null=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='answers', to='survey.question')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='survey.submission')),
            ],
            options={
                'db_table': 'survey_answers',
            },
        ),
        migrations.CreateModel(
            name='Summary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('submission', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='summary', to='survey.submission')),
            ],
            options={
                'db_table': 'survey_summaries',
            },
        ),
        migrations.AddField(
            model_name='submission',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='submissions', to='survey.survey'),
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.TextField(blank=True, max_length=500, null=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='survey.answer')),
                ('option', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='choices', to='survey.option')),
            ],
            options={
                'db_table': 'survey_choices',
                'constraints': [models.UniqueConstraint(fields=('option_id', 'answer_id'), name='survey_choices_option_id_answer_id_unique')],
            },
        ),
        migrations.AddConstraint(
            model_name='option',
            constraint=models.UniqueConstraint(fields=('content', 'question_id'), name='survey_options_content_question_id_unique'),
        ),
        migrations.AddConstraint(
            model_name='option',
            constraint=models.UniqueConstraint(fields=('order', 'question_id'), name='survey_options_order_question_id_unique'),
        ),
        migrations.AddConstraint(
            model_name='question',
            constraint=models.UniqueConstraint(fields=('order', 'section_id'), name='survey_questions_order_section_id_unique'),
        ),
        migrations.AddConstraint(
            model_name='question',
            constraint=models.UniqueConstraint(fields=('key',), name='survey_questions_key_unique'),
        ),
        migrations.AddConstraint(
            model_name='result',
            constraint=models.UniqueConstraint(fields=('submission_id', 'section_id'), name='survey_results_submission_id_section_id_unique'),
        ),
        migrations.AddConstraint(
            model_name='answer',
            constraint=models.UniqueConstraint(fields=('question_id', 'submission_id'), name='survey_answers_question_id_submission_id_unique'),
        ),
        migrations.AddConstraint(
            model_name='section',
            constraint=models.UniqueConstraint(fields=('order', 'survey_id'), name='survey_sections_order_survey_id_unique'),
        ),
        migrations.AddConstraint(
            model_name='section',
            constraint=models.UniqueConstraint(fields=('key',), name='survey_sections_key_unique'),
        ),
    ]
